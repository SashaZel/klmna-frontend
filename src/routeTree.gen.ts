/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminProjectsIndexImport } from './routes/admin/projects/index'
import { Route as AdminProjectProjectIdImport } from './routes/admin/project/$projectId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const AdminProjectsIndexRoute = AdminProjectsIndexImport.update({
  id: '/admin/projects/',
  path: '/admin/projects/',
  getParentRoute: () => rootRoute,
} as any)

const AdminProjectProjectIdRoute = AdminProjectProjectIdImport.update({
  id: '/admin/project/$projectId',
  path: '/admin/project/$projectId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/project/$projectId': {
      id: '/admin/project/$projectId'
      path: '/admin/project/$projectId'
      fullPath: '/admin/project/$projectId'
      preLoaderRoute: typeof AdminProjectProjectIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/projects/': {
      id: '/admin/projects/'
      path: '/admin/projects'
      fullPath: '/admin/projects'
      preLoaderRoute: typeof AdminProjectsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutRoute
  '/admin': typeof AdminIndexRoute
  '/admin/project/$projectId': typeof AdminProjectProjectIdRoute
  '/admin/projects': typeof AdminProjectsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutRoute
  '/admin': typeof AdminIndexRoute
  '/admin/project/$projectId': typeof AdminProjectProjectIdRoute
  '/admin/projects': typeof AdminProjectsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/project/$projectId': typeof AdminProjectProjectIdRoute
  '/admin/projects/': typeof AdminProjectsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/admin'
    | '/admin/project/$projectId'
    | '/admin/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/admin'
    | '/admin/project/$projectId'
    | '/admin/projects'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/admin/'
    | '/admin/project/$projectId'
    | '/admin/projects/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutRoute: typeof AboutRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminProjectProjectIdRoute: typeof AdminProjectProjectIdRoute
  AdminProjectsIndexRoute: typeof AdminProjectsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutRoute: AboutRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminProjectProjectIdRoute: AdminProjectProjectIdRoute,
  AdminProjectsIndexRoute: AdminProjectsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/admin/",
        "/admin/project/$projectId",
        "/admin/projects/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/admin/project/$projectId": {
      "filePath": "admin/project/$projectId.tsx"
    },
    "/admin/projects/": {
      "filePath": "admin/projects/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
